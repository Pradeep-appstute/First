/*     */ package com.estimote.sdk;
/*     */ 
/*     */ import android.bluetooth.BluetoothAdapter;
/*     */ import android.bluetooth.BluetoothDevice;
/*     */ import android.bluetooth.BluetoothManager;
/*     */ import android.content.BroadcastReceiver;
/*     */ import android.content.Context;
/*     */ import android.content.Intent;
/*     */ import android.content.IntentFilter;
/*     */ import com.estimote.sdk.internal.HashCode;
/*     */ import com.estimote.sdk.internal.Preconditions;
/*     */ 
/*     */ public class Utils
/*     */ {
/*  21 */   private static final String TAG = Utils.class.getSimpleName();
/*     */   private static final int MANUFACTURER_SPECIFIC_DATA = 255;
/*     */ 
/*     */   public static Beacon beaconFromLeScan(BluetoothDevice device, int rssi, byte[] scanRecord)
/*     */   {
/*  40 */     String scanRecordAsHex = HashCode.fromBytes(scanRecord).toString();
/*     */ 
/*  42 */     for (int i = 0; i < scanRecord.length; i++) {
/*  43 */       int payloadLength = unsignedByteToInt(scanRecord[i]);
/*  44 */       if ((payloadLength == 0) || (i + 1 >= scanRecord.length))
/*     */       {
/*     */         break;
/*     */       }
/*     */ 
/*  49 */       if (unsignedByteToInt(scanRecord[(i + 1)]) != 255) {
/*  50 */         i += payloadLength; } else {
/*  51 */         if (payloadLength == 26) {
/*  52 */           if ((unsignedByteToInt(scanRecord[(i + 2)]) == 76) && (unsignedByteToInt(scanRecord[(i + 3)]) == 0) && (unsignedByteToInt(scanRecord[(i + 4)]) == 2) && (unsignedByteToInt(scanRecord[(i + 5)]) == 21))
/*     */           {
/*  57 */             String proximityUUID = String.format("%s-%s-%s-%s-%s", new Object[] { scanRecordAsHex.substring(18, 26), scanRecordAsHex.substring(26, 30), scanRecordAsHex.substring(30, 34), scanRecordAsHex.substring(34, 38), scanRecordAsHex.substring(38, 50) });
/*     */ 
/*  64 */             int major = unsignedByteToInt(scanRecord[(i + 22)]) * 256 + unsignedByteToInt(scanRecord[(i + 23)]);
/*  65 */             int minor = unsignedByteToInt(scanRecord[(i + 24)]) * 256 + unsignedByteToInt(scanRecord[(i + 25)]);
/*  66 */             int measuredPower = scanRecord[(i + 26)];
/*     */ 
/*  68 */             return new Beacon(proximityUUID, device.getName(), device.getAddress(), major, minor, measuredPower, rssi);
/*     */           }
/*     */ 
/*  71 */           return null;
/*     */         }
/*     */ 
/*  75 */         return null;
/*     */       }
/*     */     }
/*     */ 
/*  79 */     return null;
/*     */   }
/*     */ 
/*     */   public static String normalizeProximityUUID(String proximityUUID)
/*     */   {
/*  88 */     String withoutDashes = proximityUUID.replace("-", "").toLowerCase();
/*  89 */     Preconditions.checkArgument(withoutDashes.length() == 32, "Proximity UUID must be 32 characters without dashes");
/*     */ 
/*  91 */     return String.format("%s-%s-%s-%s-%s", new Object[] { withoutDashes.substring(0, 8), withoutDashes.substring(8, 12), withoutDashes.substring(12, 16), withoutDashes.substring(16, 20), withoutDashes.substring(20, 32) });
/*     */   }
/*     */ 
/*     */   public static boolean isBeaconInRegion(Beacon beacon, Region region)
/*     */   {
/* 104 */     return ((region.getProximityUUID() == null) || (beacon.getProximityUUID().equals(region.getProximityUUID()))) && ((region.getMajor() == null) || (beacon.getMajor() == region.getMajor().intValue())) && ((region.getMinor() == null) || (beacon.getMinor() == region.getMinor().intValue()));
/*     */   }
/*     */ 
/*     */   public static double computeAccuracy(Beacon beacon)
/*     */   {
/* 114 */     if (beacon.getRssi() == 0) {
/* 115 */       return -1.0D;
/*     */     }
/*     */ 
/* 118 */     double ratio = beacon.getRssi() / beacon.getMeasuredPower();
/* 119 */     double rssiCorrection = 0.96D + Math.pow(Math.abs(beacon.getRssi()), 3.0D) % 10.0D / 150.0D;
/*     */ 
/* 121 */     if (ratio <= 1.0D) {
/* 122 */       return Math.pow(ratio, 9.98D) * rssiCorrection;
/*     */     }
/* 124 */     return (0.103D + 0.89978D * Math.pow(ratio, 7.71D)) * rssiCorrection;
/*     */   }
/*     */ 
/*     */   public static Proximity proximityFromAccuracy(double accuracy)
/*     */   {
/* 152 */     if (accuracy < 0.0D) {
/* 153 */       return Proximity.UNKNOWN;
/*     */     }
/* 155 */     if (accuracy < 0.5D) {
/* 156 */       return Proximity.IMMEDIATE;
/*     */     }
/* 158 */     if (accuracy <= 3.0D) {
/* 159 */       return Proximity.NEAR;
/*     */     }
/* 161 */     return Proximity.FAR;
/*     */   }
/*     */ 
/*     */   public static Proximity computeProximity(Beacon beacon) {
/* 165 */     return proximityFromAccuracy(computeAccuracy(beacon));
/*     */   }
/*     */ 
/*     */   public static int parseInt(String numberAsString)
/*     */   {
/*     */     try
/*     */     {
/* 176 */       return Integer.parseInt(numberAsString); } catch (NumberFormatException e) {
/*     */     }
/* 178 */     return 0;
/*     */   }
/*     */ 
/*     */   public static int normalize16BitUnsignedInt(int value)
/*     */   {
/* 189 */     return Math.max(1, Math.min(value, 65535));
/*     */   }
/*     */ 
/*     */   public static void restartBluetooth(Context context, final RestartCompletedListener listener)
/*     */   {
/* 202 */     BluetoothManager bluetoothManager = (BluetoothManager)context.getSystemService("bluetooth");
/* 203 */     BluetoothAdapter adapter = bluetoothManager.getAdapter();
/*     */ 
/* 205 */     IntentFilter intentFilter = new IntentFilter("android.bluetooth.adapter.action.STATE_CHANGED");
/* 206 */     context.registerReceiver(new BroadcastReceiver()
/*     */     {
/*     */       public void onReceive(Context context, Intent intent) {
/* 209 */         if ("android.bluetooth.adapter.action.STATE_CHANGED".equals(intent.getAction())) {
/* 210 */           int state = intent.getIntExtra("android.bluetooth.adapter.extra.STATE", -1);
/* 211 */           if (state == 10) {
/* 212 */             this.adapter.enable();
/* 213 */           } else if (state == 12) {
/* 214 */             context.unregisterReceiver(this);
/* 215 */             listener.onRestartCompleted();
/*     */           }
/*     */         }
/*     */       }
/*     */     }
/*     */     , intentFilter);
/*     */ 
/* 221 */     adapter.disable();
/*     */   }
/*     */ 
/*     */   private static int unsignedByteToInt(byte value)
/*     */   {
/* 230 */     return value & 0xFF;
/*     */   }
/*     */ 
/*     */   public static enum Proximity
/*     */   {
/* 131 */     UNKNOWN, 
/*     */ 
/* 133 */     IMMEDIATE, 
/*     */ 
/* 135 */     NEAR, 
/*     */ 
/* 137 */     FAR;
/*     */   }
/*     */ 
/*     */   public static abstract interface RestartCompletedListener
/*     */   {
/*     */     public abstract void onRestartCompleted();
/*     */   }
/*     */ }

/* Location:           /Users/AppstuteMac5/Downloads/Android-SDK-master/EstimoteSDK/estimote-sdk-preview.jar
 * Qualified Name:     com.estimote.sdk.Utils
 * JD-Core Version:    0.6.2
 */