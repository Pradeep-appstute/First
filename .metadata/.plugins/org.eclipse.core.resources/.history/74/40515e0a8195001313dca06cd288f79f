package com.example.testproject;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;

public class MainActivity extends Activity {
String jsonStr;
ArrayList ticketList;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		
		InputStream is = this.getApplicationContext().getAssets().open("tickets.json");
		int size = is.available();
		byte[] buffer = new byte[size];
		is.read(buffer);
		is.close();
		String bufferString = new String(buffer);
		
        if (jsonStr != null) {
            try {

                 
                
              //convert string to JSONArray
                JSONArray jsonArray = new JSONArray(bufferString);
                //parse an Object from a random index in the JSONArray
                
                JSONObject anObject = jsonArray.getJSONObject(0); 

                
                //you can continue to set the different attributes of the Book object using key/value pairs from the Book class (e.g. setPageNum, setChapter, etc).
                
                // Getting JSON Array node
                

                // looping through All Contacts
                for (int i = 0; i < jsonArray.length(); i++) {
                	Ticket ticket = new Ticket();
                    
                	JSONObject c = jsonArray.getJSONObject(i);                     
                    ticket.ticketId = c.getLong("ticketId");
                    ticket.subject = c.getString("subject");
                    ticket.status = c.getString("status");
                    ticket.createDate = c.getLong("createDate");
                    ticket.closeDate = c.getLong("closeDate");

                    // Phone node is JSON Object



                    // adding each child node to HashMap key => value


                    // adding contact to contact list
                    contactList.add(contact);
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        } else {
            Log.e("ServiceHandler", "Couldn't get any data from the url");
        }
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

}
