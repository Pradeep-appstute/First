package com.masergy.iscticket.ContentView;

import java.io.IOException;
import java.io.InputStream;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.commons.io.IOUtils;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ExpandableListView;
import android.widget.Toast;
import android.widget.ExpandableListView.OnChildClickListener;
import android.widget.ExpandableListView.OnGroupClickListener;
import android.widget.ExpandableListView.OnGroupCollapseListener;
import android.widget.ExpandableListView.OnGroupExpandListener;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;

import com.masergy.iscticket.Activity_SliderMenu;
import com.masergy.iscticket.R;
import com.masergy.iscticket.utility.Send_to_Web;
//import com.masergy.iscticket.utility.Webservice_GetTicketDetails;
import com.masergy.iscticket.utility.Webservice_GetTicketsList;
import com.masergy.iscticket.utility.Webservice_PostSubmitData;
//import com.masergy.iscticket.utility.Webservice_GetTicketDetails.post_data;

public class Fragment_ModifyService extends Fragment {
 
	LinearLayout lin_rootview;
	ViewGroup viewgroup_servicedetails_view;
	ExpandableListAdapter listAdapter;
	ExpandableListView expListView;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		
		// construct the RelativeLayout
		lin_rootview = (LinearLayout) inflater.inflate(
				R.layout.fragment_tickets, container, false);

		// v.setBackgroundColor(Color.RED);
		
		// get the listview
		expListView = (ExpandableListView) lin_rootview.findViewById(R.id.lvExp);

		// load list view
		initExpandableListView();		
		
		// ==========Menu Title============
		TextView menu_title = ((TextView) lin_rootview.findViewById(R.id.activity_main_content_title));
			menu_title.setText("Tickets");
			
		// ===========Menu Button===============
		Button toggleMenuButton = ((Button) lin_rootview.findViewById(R.id.activity_main_content_button_menu));
		       toggleMenuButton.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
						Activity_SliderMenu.slidingMenu.toggle();
				}
		});

		return lin_rootview;
	}

	 
	private void initExpandableListView() {
		
		if(isSubmitTapped==true)
		{
			isSubmitTapped=false;
		// Remove submit view
		((LinearLayout) lin_rootview).removeView(viewgroup_submitview);
		
		// Add list view
		((ViewGroup) lin_rootview).addView(expListView);
		
		}
		
		
		listAdapter = new ExpandableListAdapter(Activity_SliderMenu.context,
				listDataHeader, listDataChild);

		// setting list adapter
		expListView.setAdapter(listAdapter);

		// Listview Group click listener
		expListView.setOnGroupClickListener(new OnGroupClickListener() {

			@Override
			public boolean onGroupClick(ExpandableListView parent, View v,
					int groupPosition, long id) {
				// Toast.makeText(getApplicationContext(),
				// "Group Clicked " + listDataHeader.get(groupPosition),
				// Toast.LENGTH_SHORT).show();
				return false;
			}
		});

		// Listview Group expanded listener
		expListView.setOnGroupExpandListener(new OnGroupExpandListener() {

			@Override
			public void onGroupExpand(int groupPosition) {
//				Toast.makeText(
//						Activity_SliderMenu.context.getApplicationContext(),
//						listDataHeader.get(groupPosition) + " Expanded",
//						Toast.LENGTH_SHORT).show();
				Log.d("tag", "groupPosition="+groupPosition);
			}
		});

		// Listview Group collasped listener
		expListView.setOnGroupCollapseListener(new OnGroupCollapseListener() {

			@Override
			public void onGroupCollapse(int groupPosition) {
//				Toast.makeText(
//						Activity_SliderMenu.context.getApplicationContext(),
//						listDataHeader.get(groupPosition) + " Collapsed",
//						Toast.LENGTH_SHORT).show();

			}
		});

		// Listview on child click listener
		expListView.setOnChildClickListener(new OnChildClickListener() {

			@Override
			public boolean onChildClick(ExpandableListView parent, View v,
					int groupPosition, int childPosition, long id) {
//				Toast.makeText(
//						Activity_SliderMenu.context.getApplicationContext(),
//						listDataHeader.get(groupPosition)
//								+ " : "
//								+ listDataChild.get(
//										listDataHeader.get(groupPosition)).get(
//										childPosition), Toast.LENGTH_SHORT)
//						.show();
				
				// 1. Fetching ticket id
//				Toast.makeText(Activity_SliderMenu.context, "ticketId="+listDataChild.get(listDataHeader.get(groupPosition)).get(childPosition).ticketId, Toast.LENGTH_SHORT).show();
				new Webservice_GetTicketDetails(Activity_SliderMenu.context, listDataChild.get(listDataHeader.get(groupPosition)).get(childPosition).ticketId).postData();
				
//					Log.d("tag", ""+Webservice_GetTicketDetails.response);
				
				// 2. Prepare ticket view
				   /*
				    {
  						"ticketId": 207935,
  						"subject": "MB095663 / Acme Labs / Irving, TX / Outage",
  						"status": "Open",
  						"createDate": 1393823842000,
  						"closeDate": null,
  						"lastUpdateDate": 1393823844000,
  						"comments": [
    									{
      										"timestamp": 1393823844000,
      										"userName": "Portal User",
      										"detail": "Name: Road Runner\nPhone: null\nEmail: acmelabs.roadrunner@gmail.com\n\nTest"
    									}
  									]
					}
				    * */
//				 //a. Read received JSON response 
//				try {
//				// Convert string to JSONArray
//				JSONObject ticketdetails_JsonObj = new JSONObject(Webservice_GetTicketDetails.response);
//				
//				String ticketId = new String(ticketdetails_JsonObj.getString("ticketId")); 
//				String subject = new String(ticketdetails_JsonObj.getString("subject")); 
//				String status = new String(ticketdetails_JsonObj.getString("status"));
//				String createDate;
//				if (!(ticketdetails_JsonObj.get("createDate").equals(JSONObject.NULL)))
//					createDate = ticketdetails_JsonObj.getString("createDate");
//				else
//					createDate = "-1";
//				
//				String closeDate;
//				if (!(ticketdetails_JsonObj.get("closeDate").equals(JSONObject.NULL)))
//					closeDate = ticketdetails_JsonObj.getString("closeDate");
//				else
//					closeDate = "-1";
//				
//				String lastUpdateDate;
//				if (!(ticketdetails_JsonObj.get("lastUpdateDate").equals(JSONObject.NULL)))
//					lastUpdateDate = ticketdetails_JsonObj.getString("lastUpdateDate");
//				else
//					lastUpdateDate = "-1";
//				
//				JSONArray comments_JsonArray = ticketdetails_JsonObj.getJSONArray("comments");
//				ArrayList<Comment> commentsList = new ArrayList<Fragment_Tickets.Comment>();
//				// Getting JSON Array node
//				for (int i = 0; i < comments_JsonArray.length(); i++) {
//						JSONObject comments_JsonObj = comments_JsonArray.getJSONObject(i);
//						Comment comment = new Comment();
//						        comment.timestamp = comments_JsonObj.getString("comment");
//						        comment.userName = comments_JsonObj.getString("userName");
//						        comment.detail = comments_JsonObj.getString("detail");
//						        commentsList.add(comment);
//				}
//				
//				//b. Prepare view
//				// Remove expandable list view
//				((LinearLayout) lin_rootview).removeView(lin_rootview.findViewById(R.id.lvExp));
//				
//				// Add ticketdetails_view
//				viewgroup_ticketdetails_view = (ViewGroup) ((Activity) Activity_SliderMenu.context).getLayoutInflater().inflate(R.layout.ticketdetails_view, (ViewGroup) lin_rootview,false);
//				((ViewGroup) lin_rootview).addView(viewgroup_ticketdetails_view);
//				
//					//subject
//		        	TextView tv_subject = (TextView)viewgroup_ticketdetails_view.findViewById(R.id.textViewSubjectValue);
//		        	tv_subject.setText(subject);
//		        	//Submitted by
////		        	TextView tv_submittedby = (TextView)viewgroup_ticketdetails_view.findViewById(R.id.textViewSubmittedByValue);
////		        	tv_submittedby.setText();
//		        	//Last updated
//		        	TextView tv_lastupdated = (TextView)viewgroup_ticketdetails_view.findViewById(R.id.textViewLastUpdatedValue);
//		        	DateTimeFormatter dateTimeFormatter = DateTimeFormat.forPattern("MM/dd/yyyy");
//		        	tv_lastupdated.setText(dateTimeFormatter.print(new DateTime(Long.parseLong(lastUpdateDate))).toString());
//		        	//ticket id
//		        	TextView tv_ticketid = (TextView)viewgroup_ticketdetails_view.findViewById(R.id.textViewticketsIdValue);
//		        	tv_ticketid.setText(ticketId);
//		        	//status
//		        	TextView tv_status = (TextView)viewgroup_ticketdetails_view.findViewById(R.id.textViewStatusValue);
//		        	tv_status.setText(status);
//				}
//				catch (JSONException e)
//				{
//					
//				}
//				

				
				return true;
			}
		});
		
	}//init()
}




