/*     */ package com.estimote.sdk.internal;
/*     */ 
/*     */ import java.util.Arrays;
/*     */ 
/*     */ public final class Objects
/*     */ {
/*     */   public static boolean equal(Object a, Object b)
/*     */   {
/*  35 */     return (a == b) || ((a != null) && (a.equals(b)));
/*     */   }
/*     */ 
/*     */   public static int hashCode(Object[] objects)
/*     */   {
/*  56 */     return Arrays.hashCode(objects);
/*     */   }
/*     */ 
/*     */   public static ToStringHelper toStringHelper(Object self)
/*     */   {
/*  99 */     return new ToStringHelper(simpleName(self.getClass()), null);
/*     */   }
/*     */ 
/*     */   public static ToStringHelper toStringHelper(Class<?> clazz)
/*     */   {
/* 113 */     return new ToStringHelper(simpleName(clazz), null);
/*     */   }
/*     */ 
/*     */   public static ToStringHelper toStringHelper(String className)
/*     */   {
/* 125 */     return new ToStringHelper(className, null);
/*     */   }
/*     */ 
/*     */   private static String simpleName(Class<?> clazz)
/*     */   {
/* 133 */     String name = clazz.getName();
/*     */ 
/* 137 */     name = name.replaceAll("\\$[0-9]+", "\\$");
/*     */ 
/* 140 */     int start = name.lastIndexOf('$');
/*     */ 
/* 144 */     if (start == -1) {
/* 145 */       start = name.lastIndexOf('.');
/*     */     }
/* 147 */     return name.substring(start + 1);
/*     */   }
/*     */ 
/*     */   public static <T> T firstNonNull(T first, T second)
/*     */   {
/* 167 */     return first != null ? first : Preconditions.checkNotNull(second);
/*     */   }
/*     */ 
/*     */   public static final class ToStringHelper
/*     */   {
/*     */     private final String className;
/* 178 */     private ValueHolder holderHead = new ValueHolder(null);
/* 179 */     private ValueHolder holderTail = this.holderHead;
/* 180 */     private boolean omitNullValues = false;
/*     */ 
/*     */     private ToStringHelper(String className)
/*     */     {
/* 186 */       this.className = ((String)Preconditions.checkNotNull(className));
/*     */     }
/*     */ 
/*     */     public ToStringHelper omitNullValues()
/*     */     {
/* 197 */       this.omitNullValues = true;
/* 198 */       return this;
/*     */     }
/*     */ 
/*     */     public ToStringHelper add(String name, Object value)
/*     */     {
/* 208 */       return addHolder(name, value);
/*     */     }
/*     */ 
/*     */     public ToStringHelper add(String name, boolean value)
/*     */     {
/* 218 */       return addHolder(name, String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper add(String name, char value)
/*     */     {
/* 228 */       return addHolder(name, String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper add(String name, double value)
/*     */     {
/* 238 */       return addHolder(name, String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper add(String name, float value)
/*     */     {
/* 248 */       return addHolder(name, String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper add(String name, int value)
/*     */     {
/* 258 */       return addHolder(name, String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper add(String name, long value)
/*     */     {
/* 268 */       return addHolder(name, String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper addValue(Object value)
/*     */     {
/* 278 */       return addHolder(value);
/*     */     }
/*     */ 
/*     */     public ToStringHelper addValue(boolean value)
/*     */     {
/* 290 */       return addHolder(String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper addValue(char value)
/*     */     {
/* 302 */       return addHolder(String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper addValue(double value)
/*     */     {
/* 314 */       return addHolder(String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper addValue(float value)
/*     */     {
/* 326 */       return addHolder(String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper addValue(int value)
/*     */     {
/* 338 */       return addHolder(String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public ToStringHelper addValue(long value)
/*     */     {
/* 350 */       return addHolder(String.valueOf(value));
/*     */     }
/*     */ 
/*     */     public String toString()
/*     */     {
/* 365 */       boolean omitNullValuesSnapshot = this.omitNullValues;
/* 366 */       String nextSeparator = "";
/* 367 */       StringBuilder builder = new StringBuilder(32).append(this.className).append('{');
/*     */ 
/* 369 */       for (ValueHolder valueHolder = this.holderHead.next; valueHolder != null; 
/* 370 */         valueHolder = valueHolder.next) {
/* 371 */         if ((!omitNullValuesSnapshot) || (valueHolder.value != null)) {
/* 372 */           builder.append(nextSeparator);
/* 373 */           nextSeparator = ", ";
/*     */ 
/* 375 */           if (valueHolder.name != null) {
/* 376 */             builder.append(valueHolder.name).append('=');
/*     */           }
/* 378 */           builder.append(valueHolder.value);
/*     */         }
/*     */       }
/* 381 */       return builder.append('}').toString();
/*     */     }
/*     */ 
/*     */     private ValueHolder addHolder() {
/* 385 */       ValueHolder valueHolder = new ValueHolder(null);
/* 386 */       this.holderTail = (this.holderTail.next = valueHolder);
/* 387 */       return valueHolder;
/*     */     }
/*     */ 
/*     */     private ToStringHelper addHolder(Object value) {
/* 391 */       ValueHolder valueHolder = addHolder();
/* 392 */       valueHolder.value = value;
/* 393 */       return this;
/*     */     }
/*     */ 
/*     */     private ToStringHelper addHolder(String name, Object value) {
/* 397 */       ValueHolder valueHolder = addHolder();
/* 398 */       valueHolder.value = value;
/* 399 */       valueHolder.name = ((String)Preconditions.checkNotNull(name));
/* 400 */       return this;
/*     */     }
/*     */ 
/*     */     private static final class ValueHolder
/*     */     {
/*     */       String name;
/*     */       Object value;
/*     */       ValueHolder next;
/*     */     }
/*     */   }
/*     */ }

/* Location:           /Users/AppstuteMac5/Downloads/Android-SDK-master/EstimoteSDK/estimote-sdk-preview.jar
 * Qualified Name:     com.estimote.sdk.internal.Objects
 * JD-Core Version:    0.6.2
 */