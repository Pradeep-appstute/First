package com.masergy.iscticket.slidermenu;

import java.util.List;

import com.masergy.iscticket.R;

import android.app.Activity;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

class ListAdapter extends BaseAdapter {

//    private LayoutInflater mInflater;
//    private String[] listitems;
//    private Integer[] listicons;
//    
//    public ListAdapter(Context context) {
//        // Cache the LayoutInflate to avoid asking for a new one each time.
//        mInflater = LayoutInflater.from(context);
//        listitems = context.getResources().getStringArray(R.array.list_items);
////        listicons = context.getResources().getIntArray(R.array.list_icons);
//        listicons[0] = R.drawable.ic_tickets;
//        listicons[1] = R.drawable.ic_modifyservice;
//        listicons[2] = R.drawable.ic_dopplerim;
//        listicons[3] = R.drawable.ic_contactus;
//        listicons[4] = R.drawable.ic_logout;
//    }
//
//    /**
//     * The number of items in the list is determined by the number of speeches
//     * in our array.
//     *
//     * @see android.widget.ListAdapter#getCount()
//     */
//    public int getCount() {
//
//        return listitems.length;
//    }
//
//    /**
//     * Since the data comes from an array, just returning the index is
//     * sufficent to get at the data. If we were using a more complex data
//     * structure, we would return whatever object represents one row in the
//     * list.
//     *
//     * @see android.widget.ListAdapter#getItem(int)
//     */
//    public Object getItem(int position) {
//        return position;
//    }
//
//    /**
//     * Use the array index as a unique id.
//     *
//     * @see android.widget.ListAdapter#getItemId(int)
//     */
//    public long getItemId(int position) {
//        return position;
//    }
//
//    /**
//     * Make a view to hold each row.
//     *
//     * @see android.widget.ListAdapter#getView(int, android.view.View,
//     *      android.view.ViewGroup)
//     */
//
//    public View getView(final int position, View convertView, ViewGroup parent) {
//        // A ViewHolder keeps references to children views to avoid unneccessary calls
//        // to findViewById() on each row.
//
//        // When convertView is not null, we can reuse it directly, there is no need
//        // to reinflate it. We only inflate a new View when the convertView supplied
//        // by ListView is null.
//        if (convertView == null) {
//
//            convertView = mInflater.inflate(R.layout.row, null);
//
//            // Creates a ViewHolder and store references to the two children views
//            // we want to bind data to.
//
//            TextView textView = (TextView) convertView.findViewById(R.id.row_title);
//            textView.setText(listitems[position]);
//            
//            ImageView imageView = (ImageView) convertView.findViewById(R.id.row_icon);
//            imageView.setBackgroundResource(listicons[position]);
//
//
//        } else {
//            // Get the ViewHolder back to get fast access to the TextView
//            // and the ImageView.
//            
//        	((TextView)convertView.findViewById(R.id.row_title)).setText(listitems[position]);
//        	((ImageView)convertView.findViewById(R.id.row_icon)).setBackgroundResource(listicons[position]);
//        }
//
//
//        return convertView;
//    }
//
//

	Context context;
    List<RowItem> rowItems;
 
    public ListAdapter(Context context, List<RowItem> items) {
        this.context = context;
        this.rowItems = items;
    }
 
    /*private view holder class*/
    private class ViewHolder {
        ImageView imageView;
        TextView txtTitle;
        TextView txtDesc;
    }
 
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder = null;
 
        LayoutInflater mInflater = (LayoutInflater)
            context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.row, null);
            holder = new ViewHolder();
            holder.txtDesc = (TextView) convertView.findViewById(R.id.desc);
            holder.txtTitle = (TextView) convertView.findViewById(R.id.title);
            holder.imageView = (ImageView) convertView.findViewById(R.id.icon);
            convertView.setTag(holder);
        }
        else {
            holder = (ViewHolder) convertView.getTag();
        }
 
        RowItem rowItem = (RowItem) getItem(position);
 
        holder.txtDesc.setText(rowItem.getDesc());
        holder.txtTitle.setText(rowItem.getTitle());
        holder.imageView.setImageResource(rowItem.getImageId());
 
        return convertView;
    }
 
    @Override
    public int getCount() {
        return rowItems.size();
    }
 
    @Override
    public Object getItem(int position) {
        return rowItems.get(position);
    }
 
    @Override
    public long getItemId(int position) {
        return rowItems.indexOf(getItem(position));
    }
	
}